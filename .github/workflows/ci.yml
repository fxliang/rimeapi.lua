name: CI

permissions:
  contents: write

on:
  workflow_dispatch:
  push:
    branches:
      - '*'
    tags:
      - '![0-9]+.*'
    paths:
      - '**/**'
      - '!*.md'
      - '!.gitignore'
  pull_request:

jobs:
  build-macos:
    runs-on: macos-latest
    steps:

      - uses: actions/checkout@v4
        with:
          submodules: recursive
      
      - name: install boost
        run: ./librime/install-boost.sh

      - name: setup librime
        run: |
          # get librime 1.14.0 dist
          wget https://github.com/rime/librime/releases/download/1.14.0/rime-e053fb2-macOS-universal.tar.bz2
          tar xf rime-e053fb2-macOS-universal.tar.bz2 dist
          cp -r dist/lib/* ./
      
      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          actions-cache-folder: '.xmake-cache'

      - name: build rimeapi.lua
        id: build_rimeapi_lua
        run: |
          xmake f -y -p macosx --includedirs=dist/include
          xmake -y

      - name: test
        run: |
          ./rimeapi.app test.lua api_test levers_api_test
          ./lua test.lua api_test levers_api_test

  build-ubuntu:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: compute librime short hash
        id: librime-hash
        run: |
          pushd librime
          short=$(git rev-parse --short HEAD)
          echo "short=$short" >> "$GITHUB_OUTPUT"
          popd

      - name: cache librime build
        id: cache-librime
        uses: actions/cache@v4
        with:
          path: librime/librime_1.14.0-1_amd64.deb
          key: ${{ runner.os }}-librime-${{ steps.librime-hash.outputs.short }}
          restore-keys: |
            ${{ runner.os }}-librime-

      - name: setup deps
        working-directory: librime
        run: ./action-install-linux.sh

      - name: prepare librime
        id: prepare-librime
        if: steps.cache-librime.outputs.cache-hit != 'true'
        working-directory: librime
        env:
          CMAKE_GENERATOR: Ninja
        run: |
          sudo apt install -y checkinstall
          make
          sudo checkinstall \
            --pkgname=librime \
            --pkgversion=1.14.0 \
            --pkgrelease=1 \
            --arch=amd64 \
            --pkglicense=BSD \
            --maintainer="fx.liang@outlook.com" \
            --requires="libc6, libgcc-s1, libstdc++6, libgflags2.2, libgoogle-glog0v6t64, libleveldb1d, libmarisa0, libopencc1.1, libsnappy1v5, libunwind8" \
            --nodoc \
            --install=no \
            --default \
            --backup=no

      - name: install librime
        if: steps.cache-librime.outputs.cache-hit == 'true' || steps.prepare-librime.outcome == 'success'
        working-directory: librime
        run: sudo apt install -y ./librime_1.14.0-1_amd64.deb

      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          actions-cache-folder: '.xmake-cache'

      - name: build rimeapi.lua
        id: build_rimeapi_lua
        run: xmake -y

      - name: test
        run: |
          ./rimeapi.app test.lua api_test levers_api_test
          ./lua test.lua api_test levers_api_test

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: xmake-io/github-action-setup-xmake@v1
        with:
          actions-cache-folder: '.xmake-cache'
      - uses: ilammy/msvc-dev-cmd@v1

      - name: Copy Rime files
        shell: pwsh
        run: |
          .\get-rime.ps1 -use toy -tag latest

      - name: Build rimeapi.lua
        id: build_rimeapi_lua
        run: |
          xmake f -a ${{ matrix.arch }} -y && xmake -y

      - name: run tests
        shell: cmd
        run: |
          .\rimeapi.app.exe test.lua api_test levers_api_test
          .\lua.exe test.lua api_test levers_api_test
